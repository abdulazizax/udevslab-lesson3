basePath: /
definitions:
  gin.H:
    additionalProperties: {}
    type: object
  github_com_abdulazizax_udevslab-lesson3_internal_models.Error:
    properties:
      message:
        type: string
    type: object
  github_com_abdulazizax_udevslab-lesson3_internal_models.Order:
    properties:
      createdAt:
        type: integer
      id:
        type: string
      productId:
        type: string
      quantity:
        type: integer
      status:
        type: string
      total:
        type: number
      updatedAt:
        type: integer
      userId:
        type: string
    type: object
  github_com_abdulazizax_udevslab-lesson3_internal_models.OrderCreate:
    properties:
      productId:
        type: string
      quantity:
        type: integer
      status:
        type: string
      userId:
        type: string
    type: object
  github_com_abdulazizax_udevslab-lesson3_internal_models.OrderUpdate:
    properties:
      productId:
        type: string
      quantity:
        type: integer
      status:
        type: string
      userId:
        type: string
    type: object
  github_com_abdulazizax_udevslab-lesson3_internal_models.Product:
    properties:
      createdAt:
        type: integer
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
      updatedAt:
        type: integer
    type: object
  github_com_abdulazizax_udevslab-lesson3_internal_models.ProductCreate:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
  github_com_abdulazizax_udevslab-lesson3_internal_models.ProductUpdate:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API Endpoints for MiniTwitter
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: '# UdevsLab Homework3'
  version: 1.03.67.83.145
paths:
  /orders:
    get:
      description: Retrieve a list of all orders in the database with pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of orders
          schema:
            items:
              $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Order'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: List all orders
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Create a new order and return the created order's ID
      parameters:
      - description: Order information
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.OrderCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Order ID
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: Create a new order
      tags:
      - Orders
  /orders/{order_id}:
    delete:
      description: Delete an order by its ID
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "404":
          description: Order Not Found
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: Delete an order
      tags:
      - Orders
    get:
      description: Fetch a single order by its ID
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order details
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "404":
          description: Order Not Found
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: Get an order by ID
      tags:
      - Orders
    put:
      consumes:
      - application/json
      description: Update the details of an existing order
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      - description: Order fields to update
        in: body
        name: updates
        required: true
        schema:
          $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.OrderUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Order updated successfully
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "404":
          description: Order Not Found
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: Update an order
      tags:
      - Orders
  /orders/range:
    get:
      description: Retrieve a paginated list of orders filtered by a specific date
        range and sorted by the creation date in ascending or descending order.
      parameters:
      - default: 1
        description: 'Sort order (-1: descending, 1: ascending)'
        in: query
        name: order
        required: true
        type: integer
      - default: 1
        description: Page number (1-based index)
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of orders per page
        in: query
        name: page_size
        type: integer
      - default: "2000-01-01"
        description: Start date in format (YYYY-MM-DD)
        in: query
        name: start_date
        required: true
        type: string
      - default: "2026-01-01"
        description: End date in format (YYYY-MM-DD)
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Paginated list of orders
          schema:
            items:
              $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Order'
            type: array
        "400":
          description: Bad request (invalid parameters)
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: List orders within a specific date range
      tags:
      - orders
  /products:
    get:
      description: Retrieve a list of all products in the database
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of products
          schema:
            items:
              $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Product'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: List all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Creates a new product in the database
      parameters:
      - description: Product information
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.ProductCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Product created successfully"// @Failure 400 {object} models.Error
            "Bad request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      description: Delete a product from the database by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Product deleted successfully
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Product not found
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: Delete a product by ID
      tags:
      - products
    get:
      description: Retrieve a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Product found
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Product'
        "404":
          description: Product not found
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: Get a product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update product details by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.ProductUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Product updated successfully
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "404":
          description: Product not found
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: Update a product by ID
      tags:
      - products
  /products/search:
    get:
      description: Search products by partial name with pagination
      parameters:
      - description: Search keyword
        in: query
        name: name
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of products
          schema:
            items:
              $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Product'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: Search products by name
      tags:
      - products
  /products/search/price:
    get:
      description: Retrieve products based on an exact price match with pagination
      parameters:
      - description: Price to search for
        in: query
        name: price
        required: true
        type: number
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit of products per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of products
          schema:
            items:
              $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Product'
            type: array
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: Search products by exact price
      tags:
      - products
  /products/search/price-range:
    get:
      description: Retrieve products based on a price range with pagination
      parameters:
      - default: 1
        description: 'Order (-1: decreasing, 1: increasing)'
        in: query
        name: order
        required: true
        type: integer
      - description: Minimum price
        in: query
        name: min_price
        required: true
        type: number
      - description: Maximum price
        in: query
        name: max_price
        required: true
        type: number
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Limit of products per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of products
          schema:
            items:
              $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Product'
            type: array
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_abdulazizax_udevslab-lesson3_internal_models.Error'
      summary: Search products by price range
      tags:
      - products
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
